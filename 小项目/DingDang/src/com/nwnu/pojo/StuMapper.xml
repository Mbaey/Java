<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nwnu.mapper.StuMapper">
  <resultMap id="BaseResultMap" type="com.nwnu.pojo.Stu">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="pwd" jdbcType="VARCHAR" property="pwd" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="academy" jdbcType="VARCHAR" property="academy" />
    <result column="Classid" jdbcType="INTEGER" property="classid" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, pwd, name, academy, Classid
  </sql>
  <select id="selectByExample" parameterType="com.nwnu.pojo.StuExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from stus
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from stus
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from stus
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.nwnu.pojo.StuExample">
    delete from stus
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.nwnu.pojo.Stu">
    insert into stus (id, pwd, name, 
      academy, Classid)
    values (#{id,jdbcType=INTEGER}, #{pwd,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{academy,jdbcType=VARCHAR}, #{classid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.nwnu.pojo.Stu">
    insert into stus
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="pwd != null">
        pwd,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="academy != null">
        academy,
      </if>
      <if test="classid != null">
        Classid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="pwd != null">
        #{pwd,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="academy != null">
        #{academy,jdbcType=VARCHAR},
      </if>
      <if test="classid != null">
        #{classid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.nwnu.pojo.StuExample" resultType="java.lang.Long">
    select count(*) from stus
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update stus
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.pwd != null">
        pwd = #{record.pwd,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.academy != null">
        academy = #{record.academy,jdbcType=VARCHAR},
      </if>
      <if test="record.classid != null">
        Classid = #{record.classid,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update stus
    set id = #{record.id,jdbcType=INTEGER},
      pwd = #{record.pwd,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      academy = #{record.academy,jdbcType=VARCHAR},
      Classid = #{record.classid,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.nwnu.pojo.Stu">
    update stus
    <set>
      <if test="pwd != null">
        pwd = #{pwd,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="academy != null">
        academy = #{academy,jdbcType=VARCHAR},
      </if>
      <if test="classid != null">
        Classid = #{classid,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.nwnu.pojo.Stu">
    update stus
    set pwd = #{pwd,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      academy = #{academy,jdbcType=VARCHAR},
      Classid = #{classid,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.nwnu.pojo.Stu">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="pwd" jdbcType="VARCHAR" property="pwd" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="academy" jdbcType="VARCHAR" property="academy" />
    <result column="Classid" jdbcType="INTEGER" property="classid" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, pwd, name, academy, Classid
  </sql>
  <select id="selectByExample" parameterType="com.nwnu.pojo.StuExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from stus
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from stus
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from stus
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.nwnu.pojo.StuExample">
    delete from stus
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.nwnu.pojo.Stu">
    insert into stus (id, pwd, name, 
      academy, Classid)
    values (#{id,jdbcType=INTEGER}, #{pwd,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{academy,jdbcType=VARCHAR}, #{classid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.nwnu.pojo.Stu">
    insert into stus
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="pwd != null">
        pwd,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="academy != null">
        academy,
      </if>
      <if test="classid != null">
        Classid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="pwd != null">
        #{pwd,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="academy != null">
        #{academy,jdbcType=VARCHAR},
      </if>
      <if test="classid != null">
        #{classid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.nwnu.pojo.StuExample" resultType="java.lang.Long">
    select count(*) from stus
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update stus
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.pwd != null">
        pwd = #{record.pwd,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.academy != null">
        academy = #{record.academy,jdbcType=VARCHAR},
      </if>
      <if test="record.classid != null">
        Classid = #{record.classid,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update stus
    set id = #{record.id,jdbcType=INTEGER},
      pwd = #{record.pwd,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      academy = #{record.academy,jdbcType=VARCHAR},
      Classid = #{record.classid,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.nwnu.pojo.Stu">
    update stus
    <set>
      <if test="pwd != null">
        pwd = #{pwd,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="academy != null">
        academy = #{academy,jdbcType=VARCHAR},
      </if>
      <if test="classid != null">
        Classid = #{classid,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.nwnu.pojo.Stu">
    update stus
    set pwd = #{pwd,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      academy = #{academy,jdbcType=VARCHAR},
      Classid = #{classid,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>