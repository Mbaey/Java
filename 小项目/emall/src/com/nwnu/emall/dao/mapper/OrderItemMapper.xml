<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nwnu.emall.dao.OrderItemMapper">
  <resultMap id="BaseResultMap" type="com.nwnu.emall.bean.OrderItem">
    <id column="id" jdbcType="TINYINT" property="id" />
    <result column="goods_id" jdbcType="BIGINT" property="goodsId" />
    <result column="amount" jdbcType="TINYINT" property="amount" />
    <result column="price" jdbcType="INTEGER" property="price" />
    <result column="order_id" jdbcType="BIGINT" property="orderId" />
    <result column="customer_id" jdbcType="BIGINT" property="customerId" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="createDate" jdbcType="TIMESTAMP" property="createdate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, goods_id, amount, price, order_id, customer_id, status, createDate
  </sql>
  <select id="selectByExample" parameterType="com.nwnu.emall.bean.OrderItemExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_orderitem
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Byte" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_orderitem
    where id = #{id,jdbcType=TINYINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Byte">
    delete from tb_orderitem
    where id = #{id,jdbcType=TINYINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.nwnu.emall.bean.OrderItemExample">
    delete from tb_orderitem
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.nwnu.emall.bean.OrderItem">
    insert into tb_orderitem (id, goods_id, amount, 
      price, order_id, customer_id, 
      status, createDate)
    values (#{id,jdbcType=TINYINT}, #{goodsId,jdbcType=BIGINT}, #{amount,jdbcType=TINYINT}, 
      #{price,jdbcType=INTEGER}, #{orderId,jdbcType=BIGINT}, #{customerId,jdbcType=BIGINT}, 
      #{status,jdbcType=TINYINT}, #{createdate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.nwnu.emall.bean.OrderItem">
    insert into tb_orderitem
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="goodsId != null">
        goods_id,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="orderId != null">
        order_id,
      </if>
      <if test="customerId != null">
        customer_id,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createdate != null">
        createDate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=TINYINT},
      </if>
      <if test="goodsId != null">
        #{goodsId,jdbcType=BIGINT},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=TINYINT},
      </if>
      <if test="price != null">
        #{price,jdbcType=INTEGER},
      </if>
      <if test="orderId != null">
        #{orderId,jdbcType=BIGINT},
      </if>
      <if test="customerId != null">
        #{customerId,jdbcType=BIGINT},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="createdate != null">
        #{createdate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.nwnu.emall.bean.OrderItemExample" resultType="java.lang.Long">
    select count(*) from tb_orderitem
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tb_orderitem
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=TINYINT},
      </if>
      <if test="record.goodsId != null">
        goods_id = #{record.goodsId,jdbcType=BIGINT},
      </if>
      <if test="record.amount != null">
        amount = #{record.amount,jdbcType=TINYINT},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=INTEGER},
      </if>
      <if test="record.orderId != null">
        order_id = #{record.orderId,jdbcType=BIGINT},
      </if>
      <if test="record.customerId != null">
        customer_id = #{record.customerId,jdbcType=BIGINT},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.createdate != null">
        createDate = #{record.createdate,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tb_orderitem
    set id = #{record.id,jdbcType=TINYINT},
      goods_id = #{record.goodsId,jdbcType=BIGINT},
      amount = #{record.amount,jdbcType=TINYINT},
      price = #{record.price,jdbcType=INTEGER},
      order_id = #{record.orderId,jdbcType=BIGINT},
      customer_id = #{record.customerId,jdbcType=BIGINT},
      status = #{record.status,jdbcType=TINYINT},
      createDate = #{record.createdate,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.nwnu.emall.bean.OrderItem">
    update tb_orderitem
    <set>
      <if test="goodsId != null">
        goods_id = #{goodsId,jdbcType=BIGINT},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=TINYINT},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=INTEGER},
      </if>
      <if test="orderId != null">
        order_id = #{orderId,jdbcType=BIGINT},
      </if>
      <if test="customerId != null">
        customer_id = #{customerId,jdbcType=BIGINT},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="createdate != null">
        createDate = #{createdate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=TINYINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.nwnu.emall.bean.OrderItem">
    update tb_orderitem
    set goods_id = #{goodsId,jdbcType=BIGINT},
      amount = #{amount,jdbcType=TINYINT},
      price = #{price,jdbcType=INTEGER},
      order_id = #{orderId,jdbcType=BIGINT},
      customer_id = #{customerId,jdbcType=BIGINT},
      status = #{status,jdbcType=TINYINT},
      createDate = #{createdate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=TINYINT}
  </update>
</mapper>