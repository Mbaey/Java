<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nwnu.emall.dao.SellerMapper">
  <resultMap id="BaseResultMap" type="com.nwnu.emall.bean.Seller">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="userId" jdbcType="BIGINT" property="userid" />
    <result column="shopName" jdbcType="VARCHAR" property="shopname" />
    <result column="shopUrl" jdbcType="VARCHAR" property="shopurl" />
    <result column="shopIcon" jdbcType="VARCHAR" property="shopicon" />
    <result column="rateSum" jdbcType="BIGINT" property="ratesum" />
    <result column="shopType" jdbcType="VARCHAR" property="shoptype" />
    <result column="creditLevel" jdbcType="VARCHAR" property="creditlevel" />
    <result column="starts" jdbcType="TIMESTAMP" property="starts" />
    <result column="encryptSellerId" jdbcType="VARCHAR" property="encryptsellerid" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, userId, shopName, shopUrl, shopIcon, rateSum, shopType, creditLevel, starts, 
    encryptSellerId
  </sql>
  <select id="selectByExample" parameterType="com.nwnu.emall.bean.SellerExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_seller
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_seller
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from tb_seller
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.nwnu.emall.bean.SellerExample">
    delete from tb_seller
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.nwnu.emall.bean.Seller">
    insert into tb_seller (id, userId, shopName, 
      shopUrl, shopIcon, rateSum, 
      shopType, creditLevel, starts, 
      encryptSellerId)
    values (#{id,jdbcType=BIGINT}, #{userid,jdbcType=BIGINT}, #{shopname,jdbcType=VARCHAR}, 
      #{shopurl,jdbcType=VARCHAR}, #{shopicon,jdbcType=VARCHAR}, #{ratesum,jdbcType=BIGINT}, 
      #{shoptype,jdbcType=VARCHAR}, #{creditlevel,jdbcType=VARCHAR}, #{starts,jdbcType=TIMESTAMP}, 
      #{encryptsellerid,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.nwnu.emall.bean.Seller">
    insert into tb_seller
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userid != null">
        userId,
      </if>
      <if test="shopname != null">
        shopName,
      </if>
      <if test="shopurl != null">
        shopUrl,
      </if>
      <if test="shopicon != null">
        shopIcon,
      </if>
      <if test="ratesum != null">
        rateSum,
      </if>
      <if test="shoptype != null">
        shopType,
      </if>
      <if test="creditlevel != null">
        creditLevel,
      </if>
      <if test="starts != null">
        starts,
      </if>
      <if test="encryptsellerid != null">
        encryptSellerId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="userid != null">
        #{userid,jdbcType=BIGINT},
      </if>
      <if test="shopname != null">
        #{shopname,jdbcType=VARCHAR},
      </if>
      <if test="shopurl != null">
        #{shopurl,jdbcType=VARCHAR},
      </if>
      <if test="shopicon != null">
        #{shopicon,jdbcType=VARCHAR},
      </if>
      <if test="ratesum != null">
        #{ratesum,jdbcType=BIGINT},
      </if>
      <if test="shoptype != null">
        #{shoptype,jdbcType=VARCHAR},
      </if>
      <if test="creditlevel != null">
        #{creditlevel,jdbcType=VARCHAR},
      </if>
      <if test="starts != null">
        #{starts,jdbcType=TIMESTAMP},
      </if>
      <if test="encryptsellerid != null">
        #{encryptsellerid,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.nwnu.emall.bean.SellerExample" resultType="java.lang.Long">
    select count(*) from tb_seller
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tb_seller
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.userid != null">
        userId = #{record.userid,jdbcType=BIGINT},
      </if>
      <if test="record.shopname != null">
        shopName = #{record.shopname,jdbcType=VARCHAR},
      </if>
      <if test="record.shopurl != null">
        shopUrl = #{record.shopurl,jdbcType=VARCHAR},
      </if>
      <if test="record.shopicon != null">
        shopIcon = #{record.shopicon,jdbcType=VARCHAR},
      </if>
      <if test="record.ratesum != null">
        rateSum = #{record.ratesum,jdbcType=BIGINT},
      </if>
      <if test="record.shoptype != null">
        shopType = #{record.shoptype,jdbcType=VARCHAR},
      </if>
      <if test="record.creditlevel != null">
        creditLevel = #{record.creditlevel,jdbcType=VARCHAR},
      </if>
      <if test="record.starts != null">
        starts = #{record.starts,jdbcType=TIMESTAMP},
      </if>
      <if test="record.encryptsellerid != null">
        encryptSellerId = #{record.encryptsellerid,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tb_seller
    set id = #{record.id,jdbcType=BIGINT},
      userId = #{record.userid,jdbcType=BIGINT},
      shopName = #{record.shopname,jdbcType=VARCHAR},
      shopUrl = #{record.shopurl,jdbcType=VARCHAR},
      shopIcon = #{record.shopicon,jdbcType=VARCHAR},
      rateSum = #{record.ratesum,jdbcType=BIGINT},
      shopType = #{record.shoptype,jdbcType=VARCHAR},
      creditLevel = #{record.creditlevel,jdbcType=VARCHAR},
      starts = #{record.starts,jdbcType=TIMESTAMP},
      encryptSellerId = #{record.encryptsellerid,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.nwnu.emall.bean.Seller">
    update tb_seller
    <set>
      <if test="userid != null">
        userId = #{userid,jdbcType=BIGINT},
      </if>
      <if test="shopname != null">
        shopName = #{shopname,jdbcType=VARCHAR},
      </if>
      <if test="shopurl != null">
        shopUrl = #{shopurl,jdbcType=VARCHAR},
      </if>
      <if test="shopicon != null">
        shopIcon = #{shopicon,jdbcType=VARCHAR},
      </if>
      <if test="ratesum != null">
        rateSum = #{ratesum,jdbcType=BIGINT},
      </if>
      <if test="shoptype != null">
        shopType = #{shoptype,jdbcType=VARCHAR},
      </if>
      <if test="creditlevel != null">
        creditLevel = #{creditlevel,jdbcType=VARCHAR},
      </if>
      <if test="starts != null">
        starts = #{starts,jdbcType=TIMESTAMP},
      </if>
      <if test="encryptsellerid != null">
        encryptSellerId = #{encryptsellerid,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.nwnu.emall.bean.Seller">
    update tb_seller
    set userId = #{userid,jdbcType=BIGINT},
      shopName = #{shopname,jdbcType=VARCHAR},
      shopUrl = #{shopurl,jdbcType=VARCHAR},
      shopIcon = #{shopicon,jdbcType=VARCHAR},
      rateSum = #{ratesum,jdbcType=BIGINT},
      shopType = #{shoptype,jdbcType=VARCHAR},
      creditLevel = #{creditlevel,jdbcType=VARCHAR},
      starts = #{starts,jdbcType=TIMESTAMP},
      encryptSellerId = #{encryptsellerid,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>